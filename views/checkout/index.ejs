<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    <link rel="stylesheet" href="/checkout.css" />
    <link rel="stylesheet" href="/navbar.css" />
    <link rel="stylesheet" href="/footer.css" />
    <title>Cart</title>
</head>

<body>
    <%- include("../partials/navbar") %>

    <main>
        <div class="items-wrapper">
            <h2>Cart Items</h2>
            <div class="items">
                <!-- Cart items will be rendered here -->
            </div>
        </div>
    </main>

    <%- include("checkout-partials/checkout") %>
    <%- include("../partials/footer") %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.1.2/axios.min.js"></script>
    <script src="/middleware/checkSession.js"></script>

  <script>
    let cart = null; // Move cart declaration outside the event listener

    document.addEventListener("DOMContentLoaded", () => {
        try {
            const cartRaw = localStorage.getItem("cart");
            
            if (cartRaw) {
                const parsed = JSON.parse(cartRaw);
                cart = parsed;
                console.log("Rendering cart items:", cart.items);
                // Calculate total as sum of (item.price * item.quantity) for each item
                cart.total = parsed.items.reduce((sum, item) => {
                    const price = Number(item.price) || 0;
                    const quantity = Number(item.quantity) || 0;
                    return sum + (price * quantity);
                }, 0);
                    
               if (!Array.isArray(cart.items) || cart.items.some(item => !item.name || !item.price || !item.quantity)) {
                    // If items is not an array or contains invalid items, reset cart
                    console.warn("Invalid cart structure in localStorage. Resetting cart.");
                    cart = { items: [], total: 0 };
                }
            } else {
                console.warn("No cart data found in localStorage. Initializing empty cart.");
                cart = { items: [], total: 0 };            
            }
        } catch (err) {
            console.error("Error parsing cart from localStorage:", err);
            cart = { items: [], total: 0 }; // Initialize cart in case of error
        }

        // Use cart.items directly instead of separate variable
        function renderCartItems() {
            const itemsContainer = document.querySelector(".items");
            if (!itemsContainer) {
                console.error("Items container not found in DOM");
                return;
            }
            itemsContainer.innerHTML = "";
            

            if (cart.items || cart.items.length !== 0) {
                itemsContainer.innerHTML = "<p>Your cart is empty.</p>";
                return;
            }

            const fragment = document.createDocumentFragment();

            cart.items.forEach(item => {
                // Validate item properties
                if (!item.name || !item.price || !item.quantity) {
                    console.warn("Invalid item in cart:", item);
                    return;
                }

                const itemElement = document.createElement("div");
                itemElement.className = "item";

                const imgSrc = item.image || "/img/default.jpg";

                itemElement.innerHTML = `
                    <img src="${imgSrc}" alt="${item.name}" class="item-image">
                    <div class="item-details">
                        <h3>${item.name}</h3>
                        <p>Price: $${Number(item.price).toFixed(2)}</p>
                        <p>Quantity: ${item.quantity}</p>
                    </div>
                `;

                fragment.appendChild(itemElement);
            });

            itemsContainer.appendChild(fragment);
        }

        // Call renderCartItems immediately after initialization
        renderCartItems();
    });
</script>


</body>

</html>
